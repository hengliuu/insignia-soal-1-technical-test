generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime  @default(now()) @db.Timestamp()
  updated_at       DateTime? @db.Timestamp()
  last_activity_at DateTime  @db.Timestamp()
  email            String    @unique @db.VarChar(100)
  email_verified   DateTime  @default(now()) @db.Timestamp()
  name             String    @db.VarChar(100)
  password         String    @db.VarChar(100)
  workspace_id     String    @db.Uuid
  Workspace        workspace @relation(fields: [workspace_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model workspace {
  id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String    @db.VarChar(50)
  users    users[]
  contacts contact[]
}

model contact {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime       @default(now()) @db.Timestamp()
  updated_at    DateTime?      @db.Timestamp()
  workspace_id  String         @db.Uuid
  name          String         @db.VarChar(100)
  phone_number  String         @db.VarChar(15)
  email         String         @db.VarChar(100)
  address       String         @db.VarChar(150)
  contact_lists contact_list[]
  Workspace     workspace      @relation(fields: [workspace_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model contact_list {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contact_group_id String        @db.Uuid
  contact_id       String        @db.Uuid
  Contact          contact       @relation(fields: [contact_id], references: [id])
  ContactGroup     contact_group @relation(fields: [contact_group_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([contact_group_id, contact_id])
}

model contact_group {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime       @default(now()) @db.Timestamp()
  updated_at    DateTime?      @db.Timestamp()
  name          String         @db.VarChar(100)
  description   String         @db.VarChar(256)
  contact_lists contact_list[]
}
