generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id               Bytes     @id @db.Binary(16)
  created_at       DateTime  @db.DateTime(0)
  updated_at       DateTime? @db.DateTime(0)
  last_activity_at DateTime  @db.DateTime(0)
  email            String    @unique @db.VarChar(100)
  email_verified   DateTime  @db.DateTime(0)
  name             String    @db.VarChar(100)
  password         String    @db.VarChar(100)
  workspace_id     String    @db.VarChar(50)
  Workspace        workspace @relation(fields: [workspace_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model workspace {
  id       String    @id @default(uuid())
  name     String    @db.VarChar(50)
  users    users[]
  contacts contact[]
}

model contact {
  id            Bytes          @id @db.Binary(16)
  created_at    DateTime
  updated_at    DateTime?
  workspace_id  String         @db.VarChar(50)
  name          String         @db.VarChar(100)
  phone_number  String         @db.VarChar(15)
  email         String         @db.VarChar(100)
  address       String         @db.VarChar(150)
  contact_lists contact_list[]
  Workspace     workspace      @relation(fields: [workspace_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model contact_list {
  id               Bytes         @id @db.Binary(16)
  contact_group_id Bytes         @db.Binary(16)
  contact_id       Bytes         @db.Binary(16)
  Contact          contact       @relation(fields: [contact_id], references: [id])
  ContactGroup     contact_group @relation(fields: [contact_group_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model contact_group {
  id          Bytes          @id @db.Binary(16)
  createdAt   DateTime
  updatedAt   DateTime?
  name        String
  description String
  ContactList contact_list[]
}
